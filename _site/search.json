[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "Prediction of ODI Outcomes",
    "section": "",
    "text": "Since its inception in the late 16th century, cricket has established itself as once of the most popular sports on the planet with yearly viewers numbering in the billions. With so many viewers, prediction of match outcomes have become a hot topic for enthusiasts and sports bettors alike. We plan to use “live” data from 2023 to predict the outcome of the match based on a logistic regression model that takes into account features that are dynamically changing. With each match “update” we will feed the new data into our model to update the prediction it is making. By doing so we can dynamically see how the outcome of a game changes as the match progresses."
  },
  {
    "objectID": "proposal.html#introduction",
    "href": "proposal.html#introduction",
    "title": "Prediction of ODI Outcomes",
    "section": "",
    "text": "Since its inception in the late 16th century, cricket has established itself as once of the most popular sports on the planet with yearly viewers numbering in the billions. With so many viewers, prediction of match outcomes have become a hot topic for enthusiasts and sports bettors alike. We plan to use “live” data from 2023 to predict the outcome of the match based on a logistic regression model that takes into account features that are dynamically changing. With each match “update” we will feed the new data into our model to update the prediction it is making. By doing so we can dynamically see how the outcome of a game changes as the match progresses."
  },
  {
    "objectID": "proposal.html#why-the-odi-dataset",
    "href": "proposal.html#why-the-odi-dataset",
    "title": "Prediction of ODI Outcomes",
    "section": "Why the ODI dataset",
    "text": "Why the ODI dataset\n\nCricket enjoys widespread popularity worldwide, particularly among cricket enthusiasts, making it a sport with broad appeal.\nThe ODI dataset is rich in detail, encompassing player statistics, match outcomes, team performances, and other relevant information.\nWith the ODI dataset, we can conduct thorough comparative analyses across players, teams, and historical eras. These comparisons can uncover trends, patterns, and changes, offering valuable insights into the sport’s development over time."
  },
  {
    "objectID": "proposal.html#high-level-goal",
    "href": "proposal.html#high-level-goal",
    "title": "Prediction of ODI Outcomes",
    "section": "High-level Goal",
    "text": "High-level Goal\nIn this project we will create a dashboard of a live, ongoing cricket match that updates and predict its plots and statistics at regular intervals."
  },
  {
    "objectID": "proposal.html#goal-details",
    "href": "proposal.html#goal-details",
    "title": "Prediction of ODI Outcomes",
    "section": "Goal Details",
    "text": "Goal Details\n\nMotivation:\nFor this project we wanted to showcase our prediction skill-set with the challenge of a live dataset, and what better live dataset to use than sports, so we went with our favorite sport - cricket. Our idea is to compare and contrast a predicted trend with the actual live trend. For the purposes of demonstration we won’t use an actual real-time data as we found that there would be unwanted associated costs, so we will instead use a ready made latest dataset, where our back-end server will automatically update the data table and communicate it to the front-end at regular intervals, essentially mocking a live match.\n\n\nDescription of datasets:\nWe’ll use two datasets:\n\nODI_Match_Data.csv: Provides facts about the location and season of the cricket matches along with team information and the play results from each team member. We’ll need this one to investigate partnerships between batsmen. It’s dimensions are 155432 rows of data by 23 variable columns. The data that appears in this proposal is a truncated version for ease of storage, but the project will utilize an API that will supply the entire dataset.\nVariables that we’ll use:\n\n\n\n\n\n\n\n\nVariable Name\nData type\nDescription\n\n\n\n\nmatch_id\ndouble\nA unique identifier for each ODI cricket match.\n\n\nseason\ncharacter\nThe season in which the match took place\n\n\nstart_date\ncharacter\nThe date on which the match started.\n\n\ninnings\ndouble\nThe innings number (1st innings or 2nd innings).\n\n\nball\ndouble\nA numeric representation of the ball number bowled in the innings.\n\n\nbatting_team\ncharacter\nThe name of the batting team for the current innings.\n\n\nbowling_team\ncharacter\nThe name of the bowling team for the current innings.\n\n\nstriker\ncharacter\nThe batsman who is currently facing the ball.\n\n\nnon_striker\ncharacter\nThe batsman at the non-striker’s end.\n\n\nbowler\ncharacter\nThe bowler who is delivering the ball.\n\n\nruns_off_bat\ndouble\nThe number of runs scored off the bat (excluding extras).\n\n\nextras\ndouble\nThe total number of extra runs (wides, no-balls, byes, leg-byes, penalty) in the current ball.\n\n\nwides\ndouble\nThe number of wide deliveries bowled in the current ball.\n\n\nnoballs\ndouble\nThe number of no-ball deliveries bowled in the current ball.\n\n\nbyes\ndouble\nThe number of byes scored in the current ball.\n\n\nlegbyes\ndouble\nThe number of leg-byes scored in the current ball.\n\n\n\nODI_Match_info.csv: Overlaps in data with the above but provides information on the umpire, performance, and the city the match took place. We’ll need this one to analyze the batting and bowling performance of each player. It’s dimensions are 2380 rows of data by 18 variable columns.\nVariables that we’ll use:\n\n\n\n\n\n\n\n\nVariable Name\nData type\nDescription\n\n\n\n\nid\ndouble\nA unique identifier for each cricket match.\n\n\nseason\ncharacter\nThe season in which the match took place\n\n\ndate\ndate\nThe date on which the match was played.\n\n\nteam1\ncharacter\nThe name of the first cricket team participating in the match.\n\n\nteam2\ncharacter\nThe name of the second cricket team participating in the match.\n\n\nresult\ncharacter\nThe result of the match (e.g., “normal,” “tie,” “no result”).\n\n\nwinner\ncharacter\nThe winning team of the match.\n\n\nwin_by_runs\ndouble\nThe margin of victory in runs (0 for wickets, if not applicable).\n\n\nwin_by_wickets\ndouble\nThe margin of victory in wickets (0 for runs, if not applicable).\n\n\n\n\n\nimport pandas as pd\ndata = pd.read_csv('data/ODI_Match_Data.csv')\nprint(data.head())\n\n   match_id   season  start_date                           venue  innings  \\\n0   1389389  2023/24  2023-09-24  Holkar Cricket Stadium, Indore        1   \n1   1389389  2023/24  2023-09-24  Holkar Cricket Stadium, Indore        1   \n2   1389389  2023/24  2023-09-24  Holkar Cricket Stadium, Indore        1   \n3   1389389  2023/24  2023-09-24  Holkar Cricket Stadium, Indore        1   \n4   1389389  2023/24  2023-09-24  Holkar Cricket Stadium, Indore        1   \n\n   ball batting_team bowling_team     striker   non_striker  ... wides  \\\n0   0.1        India    Australia  RD Gaikwad  Shubman Gill  ...   NaN   \n1   0.2        India    Australia  RD Gaikwad  Shubman Gill  ...   NaN   \n2   0.3        India    Australia  RD Gaikwad  Shubman Gill  ...   NaN   \n3   0.4        India    Australia  RD Gaikwad  Shubman Gill  ...   NaN   \n4   0.5        India    Australia  RD Gaikwad  Shubman Gill  ...   NaN   \n\n   noballs  byes  legbyes  penalty  wicket_type  player_dismissed  \\\n0      NaN   NaN      NaN      NaN          NaN               NaN   \n1      NaN   NaN      NaN      NaN          NaN               NaN   \n2      NaN   NaN      NaN      NaN          NaN               NaN   \n3      NaN   NaN      NaN      NaN          NaN               NaN   \n4      NaN   NaN      NaN      NaN          NaN               NaN   \n\n   other_wicket_type other_player_dismissed cricsheet_id  \n0                NaN                    NaN      1389389  \n1                NaN                    NaN      1389389  \n2                NaN                    NaN      1389389  \n3                NaN                    NaN      1389389  \n4                NaN                    NaN      1389389  \n\n[5 rows x 23 columns]\n\n\n\n\nResearch goal:\nMatch Outcome Prediction -\nUse historical and current match data with logistic regression classification to predict the winner of a cricket match based on the live match statistics (e.g., runs scored, wickets fallen, overs bowled), that update every minute. Each time a statistic is updated, the prediction will update as well."
  },
  {
    "objectID": "proposal.html#implementation",
    "href": "proposal.html#implementation",
    "title": "Prediction of ODI Outcomes",
    "section": "Implementation :",
    "text": "Implementation :\n\nAnalysis Plan\nWe will first preprocess the dataset by cleaning and converting it before analyzing the results of matches between two teams, depending on the current match we are focused on. Using feature engineering, we will extract pertinent aspects like the location, the bowling and batting teams, the number of runs scored, the number of wickets taken, etc. After dividing the dataset into training and testing sets, the selected model will be trained using the training set. Metrics uch as accuracy, precision, recall, or F1-score will be used to measure the model’s predictive power on the testing data after training. In the end, we will use the trained model to forecast the match result based on the attributes that were taken out of the data. This strategy will shed light on the likely outcome of the match. This model will be displayed on a webpage which will refresh every time a new stat is updated, and the prediction from the model will update.\n\n\n\nMocking Live Data :\nTo avoid unnecessary costs associated with real-time data, we will split the data into two parts: past data and live data.\nThe past data will include information from years 2002 to 2022, while the live data will consist of data from the year 2023. Each entry from 2023 will be read from the actual CSV file and entered into a database table with an interval of 10 to 20 seconds between two consecutive entries. These entries will be considered as live data and will be sent to the API caller."
  },
  {
    "objectID": "proposal.html#back-end-api",
    "href": "proposal.html#back-end-api",
    "title": "Prediction of ODI Outcomes",
    "section": "Back-End API",
    "text": "Back-End API\nGET /current-performance\n\nLive Data: Will show the live stats (mocked) of an ongoing match between team A and B\nPrediction: Who will win out of Team A and B\n\nThese APIs are subject to change, additions, or removals as we analyze the data."
  },
  {
    "objectID": "proposal.html#schedule",
    "href": "proposal.html#schedule",
    "title": "Prediction of ODI Outcomes",
    "section": "Schedule",
    "text": "Schedule\n\n\n\n\n\n\n\n\n\nTask\nPriority (as of 4/10)\nResponsible\nDue\n\n\n\n\nFinalize proposal w/ changes\nHigh\nChristian, Srinivasan, Akash\n4/10\n\n\nEDA/Data Selection\nHigh\nRajitha, Praveen, Christian\n4/13\n\n\nFeature Engineering\nMedium\nAkash, Rajitha, Gowtham, Tejas\n4/17\n\n\nModel Training , Validation, and Comparison\nMedium\nChristian, Praveen, Srinivasan, Gowtham\n4/19\n\n\nModel Integration with API from 526\nLow\nSrinivasan, Tejas, Praveen\n4/22\n\n\nWrite Up Outline\nLow\nRajitha, Tejas, Akash, Gowtham\n4/24\n\n\nPresentation/ Write Up Final Draft\nLow\nEntire Team\n4/31\n\n\nReview\nLow\nEntire Team\n4/31-5/5\n\n\nPresentation\nLow\nEntire Team\n5/6"
  },
  {
    "objectID": "proposal.html#references",
    "href": "proposal.html#references",
    "title": "Prediction of ODI Outcomes",
    "section": "References",
    "text": "References\n\nUtkarsh Tomar. (2023). ODI Men’s Cricket Match Data (2002-2023) [Data set]. Kaggle. https://doi.org/10.34740/KAGGLE/DS/3780212"
  }
]